version: "3.9"

networks:
  proxy:
    external: true
    name: traefik_proxy
  appnet:
    name: seferverse_appnet

services:
  backend:
    build:
      context: ../seferverse-dapp/backend
      dockerfile: Dockerfile
    expose:
      - "8000"
    volumes:
      - ../seferverse-blockchain:/app/seferverse-blockchain:ro
    environment:
      - DEPLOYMENTS_PATH=/app/seferverse-blockchain/deployments.json
      - STREAM_TOKEN=${STREAM_TOKEN}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - appnet
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.sefer-api.rule=Host(`api.seferverse1789.siyahkare.com`)
      - traefik.http.routers.sefer-api.entrypoints=websecure
      - traefik.http.routers.sefer-api.tls.certresolver=le
      - traefik.http.services.sefer-api.loadbalancer.server.port=8000
    restart: always

  frontend:
    build:
      context: ../seferverse-dapp/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: http://backend:8000
        NEXT_PUBLIC_EXPLORER_BASE: ${NEXT_PUBLIC_EXPLORER_BASE}
        NEXT_PUBLIC_STREAM_TOKEN: ${STREAM_TOKEN}
    environment:
      - NEXT_PUBLIC_EXPLORER_BASE=${NEXT_PUBLIC_EXPLORER_BASE}
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_STREAM_TOKEN=${STREAM_TOKEN}
    expose:
      - "3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - appnet
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.sefer-web.rule=Host(`seferverse1789.siyahkare.com`)
      - traefik.http.routers.sefer-web.entrypoints=websecure
      - traefik.http.routers.sefer-web.tls.certresolver=le
      - traefik.http.services.sefer-web.loadbalancer.server.port=3000
    restart: always

  hardhat-node:
    image: node:20-alpine
    working_dir: /workspace
    volumes:
      - ../seferverse-blockchain:/workspace
      - blockchain_node_modules:/workspace/node_modules
    command: sh -c "npm ci --no-audit --no-fund || npm install --no-audit --no-fund && npx hardhat node --hostname 0.0.0.0"
    networks:
      - appnet
    restart: unless-stopped

  hardhat-deploy:
    image: node:20-alpine
    working_dir: /workspace
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - BASESCAN_API_KEY=${BASESCAN_API_KEY}
      - SEFERVERSE_CONTRACT_NAME=${SEFERVERSE_CONTRACT_NAME:-SeferVerseDAO}
      - HARDHAT_RPC_URL=http://hardhat-node:8545
    volumes:
      - ../seferverse-blockchain:/workspace
      - blockchain_node_modules:/workspace/node_modules
    entrypoint: sh -c "npm ci --no-audit --no-fund || npm install --no-audit --no-fund && npx hardhat run scripts/deployAndVerify.js --network localhost"
    depends_on:
      - backend
      - hardhat-node
    profiles: ["deploy"]
    networks:
      - appnet

  # nginx: kaldırıldı; Traefik reverse-proxy görevini üstleniyor

volumes:
  blockchain_node_modules:
