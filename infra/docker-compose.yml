services:
  backend:
    build:
      context: ../seferverse-dapp/backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ../seferverse-blockchain:/app/seferverse-blockchain:ro
    environment:
      - DEPLOYMENTS_PATH=/app/seferverse-blockchain/deployments.json
      - STREAM_TOKEN=${STREAM_TOKEN}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ../seferverse-dapp/frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: http://backend:8000
        NEXT_PUBLIC_EXPLORER_BASE: ${NEXT_PUBLIC_EXPLORER_BASE}
        NEXT_PUBLIC_STREAM_TOKEN: ${STREAM_TOKEN}
    environment:
      - NEXT_PUBLIC_EXPLORER_BASE=${NEXT_PUBLIC_EXPLORER_BASE}
      - NEXT_PUBLIC_BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_STREAM_TOKEN=${STREAM_TOKEN}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy

  hardhat-node:
    image: node:20-alpine
    working_dir: /workspace
    volumes:
      - ../seferverse-blockchain:/workspace
      - blockchain_node_modules:/workspace/node_modules
    command: sh -c "npm ci --no-audit --no-fund || npm install --no-audit --no-fund && npx hardhat node --hostname 0.0.0.0"
    ports:
      - "8545:8545"

  hardhat-deploy:
    image: node:20-alpine
    working_dir: /workspace
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY}
      - BASESCAN_API_KEY=${BASESCAN_API_KEY}
      - SEFERVERSE_CONTRACT_NAME=${SEFERVERSE_CONTRACT_NAME:-SeferVerseDAO}
      - HARDHAT_RPC_URL=http://hardhat-node:8545
    volumes:
      - ../seferverse-blockchain:/workspace
      - blockchain_node_modules:/workspace/node_modules
    entrypoint: sh -c "npm ci --no-audit --no-fund || npm install --no-audit --no-fund && npx hardhat run scripts/deployAndVerify.js --network localhost"
    depends_on:
      - backend
      - hardhat-node
    profiles: ["deploy"]

  nginx:
    image: nginx:stable-alpine
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  blockchain_node_modules:
